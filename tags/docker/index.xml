<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Docker on Cogito, ergo sum</title><link>https://winsphinx.github.io/blog/tags/docker/</link><description>Recent content in Docker on Cogito, ergo sum</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Fri, 10 Nov 2023 20:10:00 +0800</lastBuildDate><atom:link href="https://winsphinx.github.io/blog/tags/docker/index.xml" rel="self" type="application/rss+xml"/><item><title>搭建家庭多媒体中心</title><link>https://winsphinx.github.io/blog/post/building-home-media-center/</link><pubDate>Fri, 10 Nov 2023 20:10:00 +0800</pubDate><guid>https://winsphinx.github.io/blog/post/building-home-media-center/</guid><description>&lt;p&gt;近期用一组 Docker 搭建了家庭多媒体中心，在此做个记录。 &lt;br/&gt;&lt;/p&gt;</description></item><item><title>折腾 MPD</title><link>https://winsphinx.github.io/blog/post/mpd/</link><pubDate>Thu, 05 Oct 2023 19:06:00 +0800</pubDate><guid>https://winsphinx.github.io/blog/post/mpd/</guid><description>&lt;p&gt;mpd&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;（Music Player Daemon），是一种音乐播放器守护进程，它可以在后台运行，不需要图形界面，可以通过网络或本地连接控制它。 &lt;br/&gt;&lt;/p&gt;
&lt;p&gt;mpd 支持多种音频格式，包括 MP3、FLAC、AAC、WAV 等，可以通过插件扩展其功能。mpd 可以通过各种客户端控制，如 mpc&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;、ncmpc&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:3&#34;&gt;&lt;a href=&#34;#fn:3&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;、Cantata&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:4&#34;&gt;&lt;a href=&#34;#fn:4&#34;&gt;4&lt;/a&gt;&lt;/sup&gt; 等。 &lt;br/&gt;&lt;/p&gt;</description></item><item><title>Build Docker with Github Actions</title><link>https://winsphinx.github.io/blog/post/build-docker-with-github-actions/</link><pubDate>Sat, 12 Aug 2023 15:54:00 +0800</pubDate><guid>https://winsphinx.github.io/blog/post/build-docker-with-github-actions/</guid><description>&lt;p&gt;本文介绍两种利用 Github Actions 生成 Docker 镜像的方法。 &lt;br/&gt;&lt;/p&gt;</description></item><item><title>Docker</title><link>https://winsphinx.github.io/blog/post/docker/</link><pubDate>Wed, 03 May 2023 09:33:00 +0800</pubDate><guid>https://winsphinx.github.io/blog/post/docker/</guid><description>&lt;p&gt;Docker，一句话概括，将应用以及依赖打包到一个可移植的镜像中，从而实现虚拟化。 &lt;br/&gt;&lt;/p&gt;</description></item><item><title>NextCloud</title><link>https://winsphinx.github.io/blog/post/nextcloud/</link><pubDate>Wed, 25 Jan 2023 11:52:00 +0800</pubDate><guid>https://winsphinx.github.io/blog/post/nextcloud/</guid><description>&lt;p&gt;本文介绍了如何利用 docker 安装 NextCloud。后端数据库使用的是 MariaDB。 &lt;br/&gt;&lt;/p&gt;</description></item></channel></rss>