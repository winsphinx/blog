<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>技术 on Cogito, ergo sum</title><link>https://winsphinx.github.io/blog/categories/%E6%8A%80%E6%9C%AF/</link><description>Recent content in 技术 on Cogito, ergo sum</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Thu, 22 Sep 2022 22:22:00 +0800</lastBuildDate><atom:link href="https://winsphinx.github.io/blog/categories/%E6%8A%80%E6%9C%AF/index.xml" rel="self" type="application/rss+xml"/><item><title>使用 Python 操作 Excel 文件（又一篇）</title><link>https://winsphinx.github.io/blog/post/using-python-to-deal-excel-files-another/</link><pubDate>Thu, 22 Sep 2022 22:22:00 +0800</pubDate><guid>https://winsphinx.github.io/blog/post/using-python-to-deal-excel-files-another/</guid><description>&lt;p&gt;在&lt;a href=&#34;https://winsphinx.github.io/blog/post/using-python-to-deal-excel-files/&#34;&gt;上一篇&lt;/a&gt;中，使用了 xlrd、xlwt 两个库 的组合来操作 Excel 文件，但有几个缺点： &lt;br/&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;虽然 xlrd 可以读 xls 和 xlsx，但 xlwt 只能写 xls； &lt;br/&gt;&lt;/li&gt;
&lt;li&gt;xlwt 不能在原文件上修改，需要额外借助 xlutils。 &lt;br/&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;今天发现一个更好的库 &lt;code&gt;xlwings&lt;/code&gt;​，正好弥补了上述两个缺陷。 &lt;br/&gt;&lt;/p&gt;</description></item><item><title>使用 Python 操作 Excel 文件</title><link>https://winsphinx.github.io/blog/post/using-python-to-deal-excel-files/</link><pubDate>Sun, 28 Aug 2022 13:46:00 +0800</pubDate><guid>https://winsphinx.github.io/blog/post/using-python-to-deal-excel-files/</guid><description>&lt;p&gt;使用 Python 来处理 Excel 文件中的数据，主要会用到 pandas。而处理 Excel 文件本身，则用到 xlrd 和 xlwt，以及 xlutils 这几个库。 &lt;br/&gt;&lt;/p&gt;</description></item><item><title>IPv6</title><link>https://winsphinx.github.io/blog/post/ipv6/</link><pubDate>Wed, 13 Jul 2022 18:33:00 +0800</pubDate><guid>https://winsphinx.github.io/blog/post/ipv6/</guid><description>&lt;p&gt;本文简单介绍 IPv6 的地址格式。 &lt;br/&gt;&lt;/p&gt;</description></item><item><title>Learning Hy</title><link>https://winsphinx.github.io/blog/post/learning-hy/</link><pubDate>Sat, 23 Oct 2021 18:57:00 +0800</pubDate><guid>https://winsphinx.github.io/blog/post/learning-hy/</guid><description>&lt;p&gt;Hy is a lisp dialect built on top of python. This is achieved by converting hy code to python’s abstract syntax tree (ast). This allows hy to call native python code or python to call native hy code as well.&lt;/p&gt;</description></item><item><title>Spacemace Keys</title><link>https://winsphinx.github.io/blog/post/spacemace-keys/</link><pubDate>Thu, 23 Sep 2021 19:10:00 +0800</pubDate><guid>https://winsphinx.github.io/blog/post/spacemace-keys/</guid><description>&lt;p&gt;整理了 Spacemacs 的一些常用键。 &lt;br/&gt;&lt;/p&gt;</description></item><item><title>selenium 笔记</title><link>https://winsphinx.github.io/blog/post/selenium-notes/</link><pubDate>Fri, 20 Aug 2021 18:41:00 +0800</pubDate><guid>https://winsphinx.github.io/blog/post/selenium-notes/</guid><description>&lt;p&gt;Selenium 可以根据我们的指令，让浏览器自动加载页面，获取需要的数据，实现自动化操作。 &lt;br/&gt;&lt;/p&gt;</description></item><item><title>三阶魔方步骤</title><link>https://winsphinx.github.io/blog/post/three-order-rubik-cube-steps/</link><pubDate>Sun, 18 Jul 2021 19:12:00 +0800</pubDate><guid>https://winsphinx.github.io/blog/post/three-order-rubik-cube-steps/</guid><description>&lt;p&gt;首先介绍一下本文中用到的定义：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;根据国际标准，白色的对面是黄色；&lt;/li&gt;
&lt;li&gt;中心块，只有一种颜色；&lt;/li&gt;
&lt;li&gt;棱块，两种颜色；&lt;/li&gt;
&lt;li&gt;角块，三种颜色；&lt;/li&gt;
&lt;li&gt;六个面，分别的是顶面、底面、左面、右面、正面、背面；&lt;/li&gt;
&lt;li&gt;横向的称为层，顶层、中层、底层；&lt;/li&gt;
&lt;li&gt;纵向的称为列，左列，中列、右列；&lt;/li&gt;
&lt;li&gt;一次右手操作：上左下右（右列上翻、顶层左转、右列下翻，顶层右转）&lt;/li&gt;
&lt;li&gt;一次左手操作：上右下左（左列上翻、顶层右转、左列下翻、顶部左转）&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title>Automatically Creating PDF from LaTeX with Github Actions</title><link>https://winsphinx.github.io/blog/post/automatically-creating-pdf-from-latex-with-github-actions/</link><pubDate>Mon, 12 Apr 2021 18:02:00 +0800</pubDate><guid>https://winsphinx.github.io/blog/post/automatically-creating-pdf-from-latex-with-github-actions/</guid><description>&lt;p&gt;自从体验了 Github Actions，感觉非常好用。之前介绍过使用 Appveyor 来生成 PDF&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;，现在介绍下使用 Github Actions 来生成 PDF，并发布到 release 的步骤。&lt;/p&gt;</description></item><item><title>Using pmdaria to Forecast COVID-19</title><link>https://winsphinx.github.io/blog/post/using-pmdaria-to-forecast-covid-19/</link><pubDate>Tue, 06 Apr 2021 19:38:00 +0800</pubDate><guid>https://winsphinx.github.io/blog/post/using-pmdaria-to-forecast-covid-19/</guid><description>&lt;p&gt;之前写过两篇&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;预测 COVID-19 的方法，这次用个“偷懒”的办法，直接采用 pmdaria 来自动调整参数，用来预测分析。&lt;/p&gt;
&lt;p&gt;这次的特色是，利用 Github Actions 来定时自动运行脚本，达到&lt;a href=&#34;https://github.com/winsphinx/covid&#34;&gt;每日更新&lt;/a&gt;的目的。&lt;/p&gt;</description></item><item><title>aria2</title><link>https://winsphinx.github.io/blog/post/aria2/</link><pubDate>Wed, 17 Mar 2021 20:16:00 +0800</pubDate><guid>https://winsphinx.github.io/blog/post/aria2/</guid><description>&lt;blockquote&gt;
&lt;p&gt;aria2 是一个自由、开源、轻量级多协议和多源的命令行下载工具。它支持 HTTP/HTTPS、FTP、SFTP、 BitTorrent 和 Metalink 协议。aria2 可以通过内建的 JSON-RPC 和 XML-RPC 接口来操纵。 &lt;br/&gt;&lt;/p&gt;
&lt;/blockquote&gt;</description></item><item><title>配置打印机</title><link>https://winsphinx.github.io/blog/post/configure-printer/</link><pubDate>Tue, 16 Feb 2021 18:21:00 +0800</pubDate><guid>https://winsphinx.github.io/blog/post/configure-printer/</guid><description>&lt;p&gt;入手了一台 REDMI AX6 路由器后，突然发现，现在换个路由器不仅仅需要配置路由器本身，还有一系列的设备都需要重新配置。 &lt;br/&gt;&lt;/p&gt;</description></item><item><title>Emacs 多点编辑</title><link>https://winsphinx.github.io/blog/post/emacs-multiple-cursors-edit/</link><pubDate>Mon, 08 Feb 2021 17:59:00 +0800</pubDate><guid>https://winsphinx.github.io/blog/post/emacs-multiple-cursors-edit/</guid><description>&lt;p&gt;Emacs 可以方便地对单文件实现多点编辑，也可以对多个文件同时多点编辑。 &lt;br/&gt;&lt;/p&gt;</description></item><item><title>BASE64</title><link>https://winsphinx.github.io/blog/post/base64/</link><pubDate>Sat, 16 Jan 2021 14:23:00 +0800</pubDate><guid>https://winsphinx.github.io/blog/post/base64/</guid><description>&lt;blockquote&gt;
&lt;p&gt;Base64 是一种基于 64 个可打印字符来表示二进制数据的表示方法。由于 \(2^6=64\) ，所以每 6 个比特为一个单元，对应某个可打印字符。3 个字节有 24 个比特，对应于 4 个 Base64 单元，即 3 个字节可由 4 个可打印字符来表示。
——维基百科&lt;/p&gt;
&lt;/blockquote&gt;</description></item><item><title>Using scikit-learn to Forecast COVID-19</title><link>https://winsphinx.github.io/blog/post/using-scikit-learn-to-forecast-covid-19/</link><pubDate>Sun, 08 Nov 2020 19:19:00 +0800</pubDate><guid>https://winsphinx.github.io/blog/post/using-scikit-learn-to-forecast-covid-19/</guid><description>&lt;p&gt;之前介绍过利用 ARIMA 来预测 COVID-19 的方法&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;，精度比较高，在上次的预测中，R2 达到 0.9707434150898225。这次尝试使用机器学习的思路来预测 COVID-19。&lt;/p&gt;</description></item><item><title>Using ARIMA to Forecast COVID-19</title><link>https://winsphinx.github.io/blog/post/using-arima-to-forecast-covid-19/</link><pubDate>Sat, 12 Sep 2020 10:11:00 +0800</pubDate><guid>https://winsphinx.github.io/blog/post/using-arima-to-forecast-covid-19/</guid><description>&lt;p&gt;本文介绍如何使用 ARIMA 预测 COVID-19 趋势。数据来源为 &lt;a href=&#34;https://github.com/CSSEGISandData/COVID-19&#34;&gt;CSSEGISandData/COVID-19&lt;/a&gt;。&lt;/p&gt;</description></item><item><title>字号换算</title><link>https://winsphinx.github.io/blog/post/font-size/</link><pubDate>Sat, 11 Jul 2020 20:57:00 +0800</pubDate><guid>https://winsphinx.github.io/blog/post/font-size/</guid><description>&lt;p&gt;在调整 spacemacs 字体时，发现在某个 commit&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;中改变了字号的表示形式。对此做了些研究，整理如下：&lt;/p&gt;</description></item><item><title>Emacs GDB</title><link>https://winsphinx.github.io/blog/post/emacs-gdb/</link><pubDate>Wed, 15 Apr 2020 21:17:00 +0800</pubDate><guid>https://winsphinx.github.io/blog/post/emacs-gdb/</guid><description>&lt;p&gt;Use Emacs GDB to debug c/c++ programs.&lt;/p&gt;</description></item><item><title>COVID Worldmap Wallpaper</title><link>https://winsphinx.github.io/blog/post/covid-worldmap-wallpaper/</link><pubDate>Mon, 23 Mar 2020 21:27:00 +0800</pubDate><guid>https://winsphinx.github.io/blog/post/covid-worldmap-wallpaper/</guid><description>&lt;p&gt;新冠来袭，肆虐全球，生灵涂炭。余心系天下，试将其地图做壁纸，时时观之，扼腕叹息。&lt;/p&gt;</description></item><item><title>Machine Learning</title><link>https://winsphinx.github.io/blog/post/machine-learning/</link><pubDate>Sat, 15 Feb 2020 13:36:00 +0800</pubDate><guid>https://winsphinx.github.io/blog/post/machine-learning/</guid><description>&lt;p&gt;本文为使用 Python 实现机器学习的学习笔记。&lt;/p&gt;</description></item><item><title>Learn Clojure</title><link>https://winsphinx.github.io/blog/post/learn-clojure/</link><pubDate>Tue, 14 Jan 2020 12:53:00 +0800</pubDate><guid>https://winsphinx.github.io/blog/post/learn-clojure/</guid><description>&lt;p&gt;clojure 是一门函数式编程语言。学习 clojure 其实是出于贪心——相当于一次性学 java 和 lisp。 &lt;br/&gt;&lt;/p&gt;
&lt;p&gt;我采用的环境是 Windows 和 linux，编辑器是 emacs(spacemacs)。 &lt;br/&gt;&lt;/p&gt;</description></item></channel></rss>