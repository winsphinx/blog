<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>技术 on Cogito, ergo sum</title><link>https://blog.winsphinx.top/categories/%E6%8A%80%E6%9C%AF/</link><description>Recent content in 技术 on Cogito, ergo sum</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Wed, 17 Jul 2024 18:50:00 +0800</lastBuildDate><atom:link href="https://blog.winsphinx.top/categories/%E6%8A%80%E6%9C%AF/index.xml" rel="self" type="application/rss+xml"/><item><title>Home Networking</title><link>https://blog.winsphinx.top/post/home-networking/</link><pubDate>Wed, 17 Jul 2024 18:50:00 +0800</pubDate><guid>https://blog.winsphinx.top/post/home-networking/</guid><description>&lt;p&gt;我有一个海外 VPS 主机&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;用于实现“各种功能”，又购买了一个小主机 armbian 用于家庭网络&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;的管理。我还有一个硬盘盒，通过其自带 samba 服务接入 armbian。此外为了更多的存储空间又加了一个移动硬盘挂载到 armbian 下。组网架构图如下。 &lt;br/&gt;&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;box&#34;&gt;
&lt;figure itemprop=&#34;associatedMedia&#34;
itemscope itemtype=&#34;http://schema.org/ImageObject&#34; &gt;
&lt;div class=&#34;img&#34;&gt;
&lt;img itemprop=&#34;thumbnail&#34; src=&#34;https://blog.winsphinx.top/ox-hugo/homenetworking.png&#34; /&gt;
&lt;/div&gt;
&lt;a href=&#34;https://blog.winsphinx.top/ox-hugo/homenetworking.png&#34; itemprop=&#34;contentUrl&#34;&gt;&lt;/a&gt;
&lt;/figure&gt;
&lt;/div&gt;
&lt;br/&gt;&lt;/p&gt;</description></item><item><title>Block IP for Docker</title><link>https://blog.winsphinx.top/post/block-ip-for-docker/</link><pubDate>Sat, 11 May 2024 18:30:00 +0800</pubDate><guid>https://blog.winsphinx.top/post/block-ip-for-docker/</guid><description>&lt;p&gt;用 docker 搭建了一个&lt;a href=&#34;https://blog.winsphinx.top/post/frp/&#34;&gt;frp&lt;/a&gt;，但最近发现有很多不明 IP 的访问，虽然并未造成安全问题，总归是不胜其扰，遂打算编个程序 block 这些 IP。 &lt;br/&gt;&lt;/p&gt;</description></item><item><title>rsync</title><link>https://blog.winsphinx.top/post/rsync/</link><pubDate>Sun, 14 Apr 2024 09:14:00 +0800</pubDate><guid>https://blog.winsphinx.top/post/rsync/</guid><description>&lt;p&gt;rsync 是一个非常强大的文件同步工具，下面整理了几个常用的参数。 &lt;br/&gt;&lt;/p&gt;</description></item><item><title>tmux</title><link>https://blog.winsphinx.top/post/tmux/</link><pubDate>Thu, 28 Mar 2024 19:31:00 +0800</pubDate><guid>https://blog.winsphinx.top/post/tmux/</guid><description>&lt;p&gt;tmux（也称为终端多路复用器）是一个在终端窗口中创建和管理多个终端会话的工具。它允许您在单个终端窗口中同时运行多个终端会话或窗格，并在它们之间轻松切换。 &lt;br/&gt;&lt;/p&gt;</description></item><item><title>frp</title><link>https://blog.winsphinx.top/post/frp/</link><pubDate>Sun, 11 Feb 2024 09:54:00 +0800</pubDate><guid>https://blog.winsphinx.top/post/frp/</guid><description>&lt;p&gt;由于 IPv4 地址的短缺，工作环境从原来的独立公网 IP 地址改变成了 NAT 内网。为方便远程访问，实践了一下 frp&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; 内网穿透，记录如下： &lt;br/&gt;&lt;/p&gt;</description></item><item><title>VPS</title><link>https://blog.winsphinx.top/post/vps/</link><pubDate>Sat, 20 Jan 2024 17:57:00 +0800</pubDate><guid>https://blog.winsphinx.top/post/vps/</guid><description>&lt;p&gt;购买了一台 VPS，安装成 ubuntu 系统，配置了一些安全措施，记录如下： &lt;br/&gt;&lt;/p&gt;</description></item><item><title>Windows 下端口转发</title><link>https://blog.winsphinx.top/post/port-forwarding-on-windows/</link><pubDate>Sun, 24 Dec 2023 07:19:00 +0800</pubDate><guid>https://blog.winsphinx.top/post/port-forwarding-on-windows/</guid><description>&lt;p&gt;如图，在 Windows 下安装了一个 WSL 子系统，在 WSL 下运行了一个 Docker，外部网络如果需要访问该 docker，这时候需要用到 Windows 的端口转发。 &lt;br/&gt;&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;box&#34;&gt;
&lt;figure itemprop=&#34;associatedMedia&#34;
itemscope itemtype=&#34;http://schema.org/ImageObject&#34; &gt;
&lt;div class=&#34;img&#34;&gt;
&lt;img itemprop=&#34;thumbnail&#34; src=&#34;https://blog.winsphinx.top/ox-hugo/windows.png&#34; /&gt;
&lt;/div&gt;
&lt;a href=&#34;https://blog.winsphinx.top/ox-hugo/windows.png&#34; itemprop=&#34;contentUrl&#34;&gt;&lt;/a&gt;
&lt;/figure&gt;
&lt;/div&gt;
&lt;br/&gt;&lt;/p&gt;</description></item><item><title>搭建家庭多媒体中心</title><link>https://blog.winsphinx.top/post/building-home-media-center/</link><pubDate>Fri, 10 Nov 2023 20:10:00 +0800</pubDate><guid>https://blog.winsphinx.top/post/building-home-media-center/</guid><description>&lt;p&gt;近期用一组 Docker 搭建了家庭多媒体中心，在此做个记录。 &lt;br/&gt;&lt;/p&gt;</description></item><item><title>折腾 MPD</title><link>https://blog.winsphinx.top/post/mpd/</link><pubDate>Thu, 05 Oct 2023 19:06:00 +0800</pubDate><guid>https://blog.winsphinx.top/post/mpd/</guid><description>&lt;p&gt;mpd&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;（Music Player Daemon），是一种音乐播放器守护进程，它可以在后台运行，不需要图形界面，可以通过网络或本地连接控制它。 &lt;br/&gt;&lt;/p&gt;
&lt;p&gt;mpd 支持多种音频格式，包括 MP3、FLAC、AAC、WAV 等，可以通过插件扩展其功能。mpd 可以通过各种客户端控制，如 mpc&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;、ncmpc&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:3&#34;&gt;&lt;a href=&#34;#fn:3&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;、Cantata&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:4&#34;&gt;&lt;a href=&#34;#fn:4&#34;&gt;4&lt;/a&gt;&lt;/sup&gt; 等。 &lt;br/&gt;&lt;/p&gt;</description></item><item><title>LVM</title><link>https://blog.winsphinx.top/post/lvm/</link><pubDate>Sat, 16 Sep 2023 15:27:00 +0800</pubDate><guid>https://blog.winsphinx.top/post/lvm/</guid><description>&lt;p&gt;在某服务器上，我用 &lt;code&gt;fdisk -l&lt;/code&gt; 查看为硬盘容量为 3T，但用 &lt;code&gt;df&lt;/code&gt; 查看只有 200G。这是什么原因呢？ &lt;br/&gt;&lt;/p&gt;
&lt;p&gt;经分析，​&lt;code&gt;fdisk -l&lt;/code&gt; 命令显示的是硬盘分区表中的分区大小，而 &lt;code&gt;df&lt;/code&gt; 命令显示的是文件系统大小，中间还涉及了 LVM。 &lt;br/&gt;&lt;/p&gt;
&lt;p&gt;总的流程是，先用 fdisk 分区，再用 LVM 分卷，再建文件系统。 &lt;br/&gt;&lt;/p&gt;</description></item><item><title>Build Docker with Github Actions</title><link>https://blog.winsphinx.top/post/build-docker-with-github-actions/</link><pubDate>Sat, 12 Aug 2023 15:54:00 +0800</pubDate><guid>https://blog.winsphinx.top/post/build-docker-with-github-actions/</guid><description>&lt;p&gt;本文介绍两种利用 Github Actions 生成 Docker 镜像的方法。 &lt;br/&gt;&lt;/p&gt;</description></item><item><title>爬了个虫</title><link>https://blog.winsphinx.top/post/fetch-a-site/</link><pubDate>Thu, 13 Jul 2023 19:05:00 +0800</pubDate><guid>https://blog.winsphinx.top/post/fetch-a-site/</guid><description>&lt;p&gt;今天学了点 XPath 的用法，顺便爬了些图片。 &lt;br/&gt;&lt;/p&gt;</description></item><item><title>Docker</title><link>https://blog.winsphinx.top/post/docker/</link><pubDate>Wed, 03 May 2023 09:33:00 +0800</pubDate><guid>https://blog.winsphinx.top/post/docker/</guid><description>&lt;p&gt;Docker，一句话概括，将应用以及依赖打包到一个可移植的镜像中，从而实现虚拟化。 &lt;br/&gt;&lt;/p&gt;</description></item><item><title>Vagrant</title><link>https://blog.winsphinx.top/post/vagrant/</link><pubDate>Fri, 28 Apr 2023 18:18:00 +0800</pubDate><guid>https://blog.winsphinx.top/post/vagrant/</guid><description>&lt;p&gt;Vagrant，一句话概括，即快速部署虚拟机的工具。 &lt;br/&gt;&lt;/p&gt;</description></item><item><title>NextCloud</title><link>https://blog.winsphinx.top/post/nextcloud/</link><pubDate>Wed, 25 Jan 2023 11:52:00 +0800</pubDate><guid>https://blog.winsphinx.top/post/nextcloud/</guid><description>&lt;p&gt;本文介绍了如何利用 docker 安装 NextCloud。后端数据库使用的是 MariaDB。 &lt;br/&gt;&lt;/p&gt;</description></item><item><title>OpenWrt in Hyper-V</title><link>https://blog.winsphinx.top/post/openwrt/</link><pubDate>Fri, 11 Nov 2022 11:11:00 +0800</pubDate><guid>https://blog.winsphinx.top/post/openwrt/</guid><description>&lt;p&gt;OpenWrt 是一个相对 mini 的 Linux 发行版，通常作为路由器的系统。本文简单介绍在虚拟机上安装 OpenWrt。 &lt;br/&gt;&lt;/p&gt;</description></item><item><title>使用 Python 操作 Excel 文件（又一篇）</title><link>https://blog.winsphinx.top/post/using-python-to-deal-excel-files-another/</link><pubDate>Thu, 22 Sep 2022 22:22:00 +0800</pubDate><guid>https://blog.winsphinx.top/post/using-python-to-deal-excel-files-another/</guid><description>&lt;p&gt;在&lt;a href=&#34;https://blog.winsphinx.top/post/using-python-to-deal-excel-files/&#34;&gt;上一篇&lt;/a&gt;中，使用了 xlrd、xlwt 两个库 的组合来操作 Excel 文件，但有几个缺点： &lt;br/&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;虽然 xlrd 可以读 xls 和 xlsx，但 xlwt 只能写 xls； &lt;br/&gt;&lt;/li&gt;
&lt;li&gt;xlwt 不能在原文件上修改，需要额外借助 xlutils。 &lt;br/&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;今天发现一个更好的库 &lt;code&gt;xlwings&lt;/code&gt;​，正好弥补了上述两个缺陷。 &lt;br/&gt;&lt;/p&gt;</description></item><item><title>使用 Python 操作 Excel 文件</title><link>https://blog.winsphinx.top/post/using-python-to-deal-excel-files/</link><pubDate>Sun, 28 Aug 2022 13:46:00 +0800</pubDate><guid>https://blog.winsphinx.top/post/using-python-to-deal-excel-files/</guid><description>&lt;p&gt;使用 Python 来处理 Excel 文件中的数据，主要会用到 pandas。而处理 Excel 文件本身，则用到 xlrd 和 xlwt，以及 xlutils 这几个库。 &lt;br/&gt;&lt;/p&gt;</description></item><item><title>IPv6</title><link>https://blog.winsphinx.top/post/ipv6/</link><pubDate>Wed, 13 Jul 2022 18:33:00 +0800</pubDate><guid>https://blog.winsphinx.top/post/ipv6/</guid><description>&lt;p&gt;本文简单介绍 IPv6 的地址格式。 &lt;br/&gt;&lt;/p&gt;</description></item><item><title>Learning Hy</title><link>https://blog.winsphinx.top/post/learning-hy/</link><pubDate>Sat, 23 Oct 2021 18:57:00 +0800</pubDate><guid>https://blog.winsphinx.top/post/learning-hy/</guid><description>&lt;p&gt;Hy is a lisp dialect built on top of python. This is achieved by converting hy code to python’s abstract syntax tree (ast). This allows hy to call native python code or python to call native hy code as well.&lt;/p&gt;</description></item></channel></rss>